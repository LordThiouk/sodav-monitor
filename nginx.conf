pid /run/nginx/nginx.pid;

user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 50M;
    
    # Optimize for WebSocket
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    
    # CORS configuration
    map $http_origin $cors_origin {
        default "";
        "~^https?://[^/]+\.railway\.app$" "$http_origin";
        "http://localhost:3000" "$http_origin";
        "http://localhost:8000" "$http_origin";
    }

    upstream backend {
        server 127.0.0.1:8000;
        keepalive 32;
    }

    server {
        listen ${PORT} default_server;
        server_name _;
        
        root /app/frontend/build;
        index index.html;
        
        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript application/json;
        gzip_disable "MSIE [1-6]\.";
        
        # API requests
        location /api/ {
            proxy_pass http://backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # WebSocket connections
        location /ws {
            proxy_pass http://backend/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 86400;
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header X-Forwarded-Host $host;
        }

        # Static files with proper caching
        location /static/ {
            alias /app/frontend/build/static/;
            expires 1y;
            add_header Cache-Control "public, no-transform";
            try_files $uri =404;
            access_log off;
        }

        # Health check endpoint - Primary Railway health check
        location = /api/health {
            proxy_pass http://backend/api/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_read_timeout 30;
            proxy_connect_timeout 30;
            proxy_send_timeout 30;
            access_log off;
            
            # Add custom headers for debugging
            add_header X-Debug-Info "Railway Health Check" always;
            add_header X-Upstream-Status $upstream_status always;
            
            # Return a simple healthy response during startup
            if ($http_x_startup_check = "true") {
                return 200 '{"status":"healthy","message":"Application is starting"}';
            }
            
            # Handle timeouts gracefully
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
        }

        # Secondary health check endpoint for internal use
        location = /health {
            proxy_pass http://backend/api/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_read_timeout 30;
            proxy_connect_timeout 30;
            proxy_send_timeout 30;
            access_log off;
        }

        # All other routes go to index.html
        location / {
            try_files $uri $uri/ /index.html;
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        }

        # Error handling
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
} 